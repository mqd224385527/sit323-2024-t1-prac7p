apiVersion: v1
kind: ConfigMap
metadata:
  name: mongo-init-script
data:
  mongo-init.js: |
    db = db.getSiblingDB('sit323db');
    db.createCollection('items');
    db.items.insertMany([
      { name: 'Item 1', description: 'Description for Item 1' },
      { name: 'Item 2', description: 'Description for Item 2' }
    ]);
    db.createUser({
      user: 'appuser',
      pwd: 'apppassword',
      roles: [
        { role: 'readWrite', db: 'sit323db' }
      ]
    });
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo
          image: mongo:latest
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: MONGO_INITDB_ROOT_USERNAME
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: MONGO_INITDB_ROOT_PASSWORD
          volumeMounts:
            - name: mongo-storage
              mountPath: /data/db
            - name: mongo-init-script
              mountPath: /docker-entrypoint-initdb.d/
      volumes:
        - name: mongo-storage
          persistentVolumeClaim:
            claimName: mongo-pvc
        - name: mongo-init-script
          configMap:
            name: mongo-init-script
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
spec:
  selector:
    app: mongo
  ports:
    - port: 27017
      targetPort: 27017
